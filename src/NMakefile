#
!include ..\include\$(GEM_ARCH)
SDIR = $(MAKEDIR)
IDIR = $(SDIR)\..\include
ODIR = $(GEM_BLOC)\obj

OBJS = attribute.obj base.obj brep.obj drep.obj memory.obj model.obj \
	fillArea.obj approx.obj prmCfit.obj prmGrid.obj prmUV.obj

default:	start ..\lib\triDiscrete.dll ..\lib\gem.lib end

start:
	cd $(ODIR)
	xcopy $(SDIR)\*.c   /Q /Y
	xcopy $(SDIR)\*.h   /Q /Y
	xcopy $(SDIR)\*.def /Q /Y

triDiscrete.obj: triDiscrete.c
        cl /c $(COPTS) $(DEFINS) /I$(IDIR) triDiscrete.c

..\lib\triDiscrete.dll:    triDiscrete.obj
        -del ..\lib\triDiscrete.dll ..\lib\triDiscrete.lib ..\lib\triDiscrete.exp
        link /out:..\lib\triDiscrete.dll /dll /def:method.def triDiscrete.obj 
        $(MCOMP) /manifest ..\lib\triDiscrete.dll.manifest \
                /outputresource:..\lib\triDiscrete.dll;2

..\lib\gem.lib:	$(OBJS)
	-del ..\lib\gem.lib
	lib /out:..\lib\gem.lib $(OBJS)

$(OBJS):	$(IDIR)\gem.h  $(IDIR)\brep.h   $(IDIR)\model.h \
		$(IDIR)\drep.h $(IDIR)\memory.h $(IDIR)\attribute.h kernel.h
.c.obj:
	cl /c $(COPTS) /I. /I$(IDIR) $<

end:
	-del *.c *.h
	cd $(SDIR)

clean:
	cd $(ODIR)
	-del $(OBJS) triDiscrete.obj
	cd $(SDIR)

cleanall:
	cd $(ODIR)
        -del ..\lib\triDiscrete.dll ..\lib\triDiscrete.lib ..\lib\triDiscrete.exp
	-del ..\lib\gem.lib $(OBJS) triDiscrete.obj
	cd $(SDIR)
